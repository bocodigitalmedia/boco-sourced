// Generated by CoffeeScript 1.6.3
(function() {
  var Event, EventFactory,
    __hasProp = {}.hasOwnProperty;

  Event = require('./Event');

  EventFactory = (function() {
    function EventFactory(properties) {
      if (properties == null) {
        properties = {};
      }
      this.constructors = properties.constructors;
      this.defaultConstructor = properties.defaultConstructor;
      this.setDefaults();
    }

    EventFactory.prototype.setDefaults = function() {
      if (this.constructors == null) {
        this.constructors = {};
      }
      return this.defaultConstructor != null ? this.defaultConstructor : this.defaultConstructor = Event;
    };

    EventFactory.prototype.register = function(constructors) {
      var constructor, key, _results;
      if (constructors == null) {
        constructors = {};
      }
      _results = [];
      for (key in constructors) {
        if (!__hasProp.call(constructors, key)) continue;
        constructor = constructors[key];
        _results.push(this.constructors[key] = constructor);
      }
      return _results;
    };

    EventFactory.prototype.isRegistered = function(type) {
      return this.constructors.hasOwnProperty(type);
    };

    EventFactory.prototype.getConstructor = function(type) {
      if (this.isRegistered(type)) {
        return this.constructors[type];
      } else {
        return this.defaultConstructor;
      }
    };

    EventFactory.prototype.construct = function(type, properties) {
      var EventConstructor, event;
      EventConstructor = this.getConstructor(type);
      event = new EventConstructor(properties);
      event = this.decorate(event);
      event.type = type;
      return event;
    };

    EventFactory.prototype.decorate = function(event) {
      return event;
    };

    return EventFactory;

  })();

  module.exports = EventFactory;

}).call(this);

/*
//@ sourceMappingURL=EventFactory.map
*/

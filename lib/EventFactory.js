// Generated by CoffeeScript 1.6.3
(function() {
  var Event, EventFactory, TypeFactory, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Event = require('./Event');

  TypeFactory = require('boco-factory').TypeFactory;

  EventFactory = (function(_super) {
    __extends(EventFactory, _super);

    function EventFactory() {
      _ref = EventFactory.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    EventFactory.prototype.construct = function(type, properties) {
      if (properties.type == null) {
        properties.type = type;
      }
      return EventFactory.__super__.construct.call(this, type, properties);
    };

    EventFactory.prototype.setDefaults = function() {
      if (this.defaultConstructor == null) {
        this.defaultConstructor = Event;
      }
      return EventFactory.__super__.setDefaults.call(this);
    };

    return EventFactory;

  })(TypeFactory);

  module.exports = EventFactory;

}).call(this);

/*
//@ sourceMappingURL=EventFactory.map
*/
